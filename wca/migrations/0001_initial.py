# Generated by Django 2.1.3 on 2018-12-14 01:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('competition_id', models.AutoField(primary_key=True, serialize=False)),
                ('competition_identifier', models.CharField(max_length=32)),
                ('competition_name', models.CharField(max_length=50)),
                ('city_name', models.CharField(max_length=50)),
                ('information', models.TextField(blank=True, null=True)),
                ('year', models.PositiveSmallIntegerField()),
                ('month', models.PositiveSmallIntegerField()),
                ('day', models.PositiveSmallIntegerField()),
                ('end_month', models.PositiveSmallIntegerField()),
                ('end_day', models.PositiveSmallIntegerField()),
                ('event_specs', models.CharField(blank=True, max_length=256, null=True)),
                ('wca_delegate', models.TextField(blank=True, null=True)),
                ('organiser', models.TextField(blank=True, null=True)),
                ('venue', models.CharField(max_length=240)),
                ('venue_address', models.CharField(blank=True, max_length=120, null=True)),
                ('venue_details', models.CharField(blank=True, max_length=120, null=True)),
                ('external_website', models.CharField(blank=True, max_length=200, null=True)),
                ('latitude', models.IntegerField(blank=True, null=True)),
                ('longitude', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Competition',
                'verbose_name_plural': 'Competitions',
                'db_table': 'competition',
                'ordering': ['competition_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('continent_id', models.IntegerField(primary_key=True, serialize=False)),
                ('continent_identifier', models.CharField(max_length=50)),
                ('continent_name', models.CharField(max_length=50)),
                ('record_name', models.CharField(max_length=3)),
                ('latitude', models.IntegerField()),
                ('longitude', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Continent',
                'verbose_name_plural': 'Continents',
                'db_table': 'continent',
                'ordering': ['continent_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.AutoField(primary_key=True, serialize=False)),
                ('country_identifier', models.CharField(max_length=50)),
                ('country_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'db_table': 'country',
                'ordering': ['country_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_identifier', models.CharField(max_length=6)),
                ('event_name', models.CharField(max_length=54)),
                ('rank', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'db_table': 'event',
                'ordering': ['event_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventFormat',
            fields=[
                ('event_format_id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_format_identifier', models.CharField(max_length=1)),
                ('event_format_name', models.CharField(max_length=50)),
                ('sort_by', models.CharField(max_length=255)),
                ('sort_by_second', models.CharField(max_length=255)),
                ('expected_solve_count', models.IntegerField()),
                ('trim_fastest_n', models.IntegerField()),
                ('trim_slowest_n', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Event Format',
                'verbose_name_plural': 'Event Formats',
                'db_table': 'event_format',
                'ordering': ['event_format_name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_id', models.AutoField(primary_key=True, serialize=False)),
                ('person_identifier', models.CharField(max_length=10)),
                ('person_name', models.CharField(blank=True, max_length=80, null=True)),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'People',
                'db_table': 'person',
                'ordering': ['person_identifier'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankAverage',
            fields=[
                ('rank_average_id', models.AutoField(primary_key=True, serialize=False)),
                ('best', models.IntegerField()),
                ('world_rank', models.IntegerField()),
                ('continent_rank', models.IntegerField()),
                ('country_rank', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Rank for Average',
                'verbose_name_plural': 'Ranks for Average',
                'db_table': 'rank_average',
                'ordering': ['world_rank'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RankSingle',
            fields=[
                ('rank_single_id', models.AutoField(primary_key=True, serialize=False)),
                ('best', models.IntegerField()),
                ('world_rank', models.IntegerField()),
                ('continent_rank', models.IntegerField()),
                ('country_rank', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Rank for Single',
                'verbose_name_plural': 'Ranks for Single',
                'db_table': 'rank_single',
                'ordering': ['world_rank'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('result_id', models.AutoField(primary_key=True, serialize=False)),
                ('pos', models.SmallIntegerField()),
                ('best', models.IntegerField()),
                ('average', models.IntegerField()),
                ('person_name', models.CharField(blank=True, max_length=80, null=True)),
                ('value1', models.IntegerField()),
                ('value2', models.IntegerField()),
                ('value3', models.IntegerField()),
                ('value4', models.IntegerField()),
                ('value5', models.IntegerField()),
                ('regional_single_record', models.CharField(blank=True, max_length=3, null=True)),
                ('regional_average_record', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'verbose_name': 'Result',
                'verbose_name_plural': 'Results',
                'db_table': 'result',
                'ordering': ['competition', 'person_name', 'event', 'pos', 'average'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoundType',
            fields=[
                ('round_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('round_type_identifier', models.CharField(max_length=1)),
                ('rank', models.IntegerField()),
                ('round_type_name', models.CharField(max_length=50)),
                ('final', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Round Type',
                'verbose_name_plural': 'Round Types',
                'db_table': 'round_type',
                'ordering': ['round_type_name'],
                'managed': False,
            },
        ),
    ]
